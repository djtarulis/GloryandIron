services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: gloryandiron
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    command: ["./wait-for-db.sh", "db:5432", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    volumes:
      - .:/workspace
    working_dir: /workspace/backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/gloryandiron

  frontend:
    build:
      context: ./frontend
    working_dir: /app
    command: npm run dev -- --host 0.0.0.0
    #volumes:
    #  - ./frontend:/app
    ports:
      - "5173:5173"
    depends_on:
      - backend

volumes:
  postgres_data:
